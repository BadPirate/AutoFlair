name: Run AutoFlair daily

on:
  schedule:
    - cron: '0 18 * * *' # 11 AM Pacific Time (18:00 UTC)
  workflow_dispatch:

jobs:
  run-autoflair:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        n: [1, 2] # Adjust range based on potential max secrets
    continue-on-error: true # Continue if a set of secrets is not fully defined

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache conda dependencies
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-conda-

    - name: Install Miniconda and Create Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: '3.10'
        environment-file: environment.yml
        activate-environment: calendar_heating
        use-mamba: true

    - name: Verify Environment
      run: |
        conda list
        python --version

    - name: Check Secrets and Run AutoFlair Script
      env:
        ICAL_URL: ${{ secrets[format('ICAL_URL.{0}', matrix.n)] || '' }}
        FLAIR_CLIENT_ID: ${{ secrets[format('FLAIR_CLIENT_ID.{0}', matrix.n)] || secrets.FLAIR_CLIENT_ID || '' }}
        FLAIR_CLIENT_SECRET: ${{ secrets[format('FLAIR_CLIENT_SECRET.{0}', matrix.n)] || secrets.FLAIR_CLIENT_SECRET || '' }}
        AWAY_TEMP_C: ${{ secrets[format('AWAY_TEMP_C.{0}', matrix.n)] || secrets.AWAY_TEMP_C || '' }}
        OCCUPIED_TEMP_C: ${{ secrets[format('OCCUPIED_TEMP_C.{0}', matrix.n)] || secrets.OCCUPIED_TEMP_C || '' }}
      run: |
        if [[ -z "$ICAL_URL" ]]; then
          echo "ICAL_URL is not set for group ${{ matrix.n }}, skipping..."
          exit 0
        fi
        conda init bash
        source ~/.bashrc  # Reload the shell configuration
        conda activate calendar_heating
        echo "Running AutoFlair for ICAL_URL group ${{ matrix.n }}"
        python AutoFlair.py